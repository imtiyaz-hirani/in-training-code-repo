drop database myincedotestdb;
create database myincedotestdb;
use myincedotestdb;
-- -----------------------------------------------------
-- Table `myincedotestdb`.`customer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `myincedotestdb`.`customer` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NULL,
  `city` VARCHAR(255) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `myincedotestdb`.`category`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `myincedotestdb`.`category` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  `priority` INT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `myincedotestdb`.`featured`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `myincedotestdb`.`featured` (
  `id` INT NOT NULL,
  `is_featured` TINYINT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `myincedotestdb`.`vendor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `myincedotestdb`.`vendor` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  `city` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `myincedotestdb`.`product`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `myincedotestdb`.`product` (
  `id` INT NOT NULL,
  `title` VARCHAR(45) NULL,
  `price` VARCHAR(45) NULL,
  `description` VARCHAR(45) NULL,
  `category_id` INT NOT NULL,
  `featured_id` INT NOT NULL,
  `vendor_id` INT NOT NULL,
  PRIMARY KEY (`id`, `category_id`, `vendor_id`),
  INDEX `fk_product_category1_idx` (`category_id` ASC) ,
  INDEX `fk_product_featured1_idx` (`featured_id` ASC) ,
  INDEX `fk_product_vendor1_idx` (`vendor_id` ASC) ,
  CONSTRAINT `fk_product_category1`
    FOREIGN KEY (`category_id`)
    REFERENCES `myincedotestdb`.`category` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_product_featured1`
    FOREIGN KEY (`featured_id`)
    REFERENCES `myincedotestdb`.`featured` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_product_vendor1`
    FOREIGN KEY (`vendor_id`)
    REFERENCES `myincedotestdb`.`vendor` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `myincedotestdb`.`review`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `myincedotestdb`.`review` (
  `id` INT NOT NULL,
  `rtext` VARCHAR(555) NULL,
  `rating` DOUBLE NULL,
  `product_id` INT NOT NULL,
  `customer_id` INT NOT NULL,
  PRIMARY KEY (`id`, `product_id`),
  INDEX `fk_review_product1_idx` (`product_id` ASC) ,
  INDEX `fk_review_customer1_idx` (`customer_id` ASC) ,
  CONSTRAINT `fk_review_product1`
    FOREIGN KEY (`product_id`)
    REFERENCES `myincedotestdb`.`product` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_review_customer1`
    FOREIGN KEY (`customer_id`)
    REFERENCES `myincedotestdb`.`customer` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `myincedotestdb`.`warehouse`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `myincedotestdb`.`warehouse` (
  `id` INT NOT NULL,
  `address` VARCHAR(255) NULL,
  `sign_name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `myincedotestdb`.`customer_product`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `myincedotestdb`.`customer_product` (
  `customer_id` INT NOT NULL,
  `product_id` INT NOT NULL,
  `date_of_purchase` DATE NULL,
  `qty_of_purchase` INT NULL,
  PRIMARY KEY (`customer_id`, `product_id`),
  INDEX `fk_customer_has_product_product1_idx` (`product_id` ASC) ,
  INDEX `fk_customer_has_product_customer_idx` (`customer_id` ASC) ,
  CONSTRAINT `fk_customer_has_product_customer`
    FOREIGN KEY (`customer_id`)
    REFERENCES `myincedotestdb`.`customer` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_customer_has_product_product1`
    FOREIGN KEY (`product_id`)
    REFERENCES `myincedotestdb`.`product` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `myincedotestdb`.`product_warehouse`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `myincedotestdb`.`product_warehouse` (
  `product_id` INT NOT NULL,
  `warehouse_id` INT NOT NULL,
  `qty` INT NULL,
  PRIMARY KEY (`product_id`, `warehouse_id`),
  INDEX `fk_product_has_warehouse_warehouse1_idx` (`warehouse_id` ASC) ,
  INDEX `fk_product_has_warehouse_product1_idx` (`product_id` ASC) ,
  CONSTRAINT `fk_product_has_warehouse_product1`
    FOREIGN KEY (`product_id`)
    REFERENCES `myincedotestdb`.`product` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_product_has_warehouse_warehouse1`
    FOREIGN KEY (`warehouse_id`)
    REFERENCES `myincedotestdb`.`warehouse` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


DML - inserts
=============

mysql> insert into customer(name,city) values ('harry potter','london')
    -> ,('ronald weasley','kent'),
    -> ('hermione granger','london');

insert into category(id,name,priority) values (1,'mobile',1),(2,'laptop',2),(3,'head phones',3);

 insert into featured values (1,1),(2,0);

 insert into vendor values (1,'ABC electronics','madrid');
insert into vendor values (2,'PQR electronics','london');
insert into vendor values (3,'XYZ electronics','paris');

insert into product values (1,'Iphone 8',2000,'This is apple phone',1,1,1);
 insert into product values (2,'Samsung Z10',1600,'This is samsung phone',1,2,2);
insert into product values (3,'Oppo Mobile A77',1200,'This is oppo phone',1,2,3);
insert into product values (4,'Dell Latitude',2500,'This is dell laptop',2,2,1);
insert into product values (5,'MAC Air',2700,'This is apple laptop',2,2,2);
insert into product values (6,'HP Laptop',2200,'This is HP laptop',2,1,3);
insert into product values (7,'Senhiesers HP',200,'This is sen headphone',3,1,1);

 insert into warehouse values (1,'some address','eagle'),(2,'some address','rabbit');
 insert into product_warehouse values (1,1,3),(1,2,2),(2,1,4),(3,2,2),(4,1,2),(4,2,1),(5,1,2),(6,2,3),(7,1,7);

insert into customer_product values (1,1,'2023-01-02',1);
insert into customer_product values (1,7,'2023-01-02',1);
 insert into customer_product values (1,6,'2023-02-02',1);
insert into customer_product values (2,5,'2023-02-02',1);
 insert into customer_product values (3,2,'2023-03-02',2);
insert into customer_product values (3,6,'2023-03-02',1);
insert into customer_product values (3,7,'2023-03-02',1);

insert into review values (1,'awesome product',4.5,1,1),(2,'Great product',4.4,6,1),
(3,'reasonable price',4,5,2), (4,'Not happy',2.5,2,3),(5,'very happy',4.3,7,3);


Queries
======
Q. Display Customer info, that have purchased products and have given ratings more than 4. 

mysql> select distinct c.name, c.city
    -> from customer c join customer_product cp on c.id=cp.customer_id join product p on cp.product_id=p.id join review r on p.id=r.product_id
    -> where r.rating > 4;
+------------------+--------+
| name             | city   |
+------------------+--------+
| harry potter     | london |
| hermione granger | london |
+------------------+--------+


Q. Display number of customers that have bought products sold by each vendor in DESC order. 

mysql> select count(c.id), v.name
    -> from customer c join customer_product cp on c.id=cp.customer_id join product p on cp.product_id=p.id right join vendor v on p.vendor_id=v.id
    -> group by v.name
    -> order by count(c.id) DESC;
+-------------+-----------------+
| count(c.id) | name            |
+-------------+-----------------+
|           3 | ABC electronics |
|           2 | PQR electronics |
|           2 | XYZ electronics |
+-------------+-----------------+

Q. Display num of customers having bought featured products for each category that have given atleast 1 review. 

mysql> select count(cp.customer_id), c.name from customer_product cp join product p on p.id = cp.product_id join category c on p.category_id = c.id join featured f on f.id = p.featured_id where f.is_featured = 1 and cp.customer_id in (select customer_id from review) group by c.name;
+-----------------------+-------------+
| count(cp.customer_id) | name        |
+-----------------------+-------------+
|                     2 | head phones |
|                     2 | laptop      |
|                     1 | mobile      |
+-----------------------+-------------+

Q. Display customer that have purchased product stored at all the warehouses. 

mysql> select customer_id from customer_product where product_id IN (select product_id from product_warehouse group by product_id having count(product_id) = (select count(id) from warehouse));
+-------------+
| customer_id |
+-------------+
|           1 |
+-------------+


